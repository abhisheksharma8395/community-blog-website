[{"C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\index.js":"1","C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\App.js":"2","C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\reportWebVitals.js":"3","C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\context\\DataProvider.js":"4","C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\components\\details\\DetailView.jsx":"5","C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\components\\create\\Update.jsx":"6","C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\components\\header\\Header.jsx":"7","C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\components\\account\\Login.jsx":"8","C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\components\\about\\About.jsx":"9","C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\components\\home\\Home.jsx":"10","C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\components\\contact\\Contact.jsx":"11","C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\components\\create\\CreatePost.jsx":"12","C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\service\\api.js":"13","C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\components\\home\\Categories.jsx":"14","C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\components\\banner\\Banner.jsx":"15","C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\components\\details\\comments\\Comments.jsx":"16","C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\components\\home\\post\\Posts.jsx":"17","C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\utils\\common-utils.js":"18","C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\constants\\data.js":"19","C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\constants\\config.js":"20","C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\components\\home\\post\\Post.jsx":"21","C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\components\\details\\comments\\Comment.jsx":"22"},{"size":517,"mtime":1732561626089,"results":"23","hashOfConfig":"24"},{"size":2430,"mtime":1732561626067,"results":"25","hashOfConfig":"24"},{"size":375,"mtime":1732561626089,"results":"26","hashOfConfig":"24"},{"size":445,"mtime":1732561626088,"results":"27","hashOfConfig":"24"},{"size":3115,"mtime":1732561626073,"results":"28","hashOfConfig":"24"},{"size":3684,"mtime":1732561626073,"results":"29","hashOfConfig":"24"},{"size":885,"mtime":1732561626078,"results":"30","hashOfConfig":"24"},{"size":5242,"mtime":1732561626068,"results":"31","hashOfConfig":"24"},{"size":1947,"mtime":1732562474207,"results":"32","hashOfConfig":"24"},{"size":575,"mtime":1732561626082,"results":"33","hashOfConfig":"24"},{"size":1249,"mtime":1732562499398,"results":"34","hashOfConfig":"24"},{"size":3394,"mtime":1732561626068,"results":"35","hashOfConfig":"24"},{"size":4975,"mtime":1732561626089,"results":"36","hashOfConfig":"24"},{"size":1940,"mtime":1732561626080,"results":"37","hashOfConfig":"24"},{"size":760,"mtime":1732561626068,"results":"38","hashOfConfig":"24"},{"size":2645,"mtime":1732561626075,"results":"39","hashOfConfig":"24"},{"size":1391,"mtime":1732561626084,"results":"40","hashOfConfig":"24"},{"size":750,"mtime":1732561626093,"results":"41","hashOfConfig":"24"},{"size":190,"mtime":1732561626086,"results":"42","hashOfConfig":"24"},{"size":1579,"mtime":1732561626086,"results":"43","hashOfConfig":"24"},{"size":1464,"mtime":1732561626083,"results":"44","hashOfConfig":"24"},{"size":1376,"mtime":1732561626075,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1ylqwbx",{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\index.js",[],"C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\App.js",[],"C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\reportWebVitals.js",[],"C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\context\\DataProvider.js",[],"C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\components\\details\\DetailView.jsx",["96"],"import { useState, useEffect, useContext } from 'react';\r\n\r\nimport { Box, Typography, styled } from '@mui/material';\r\nimport { Delete, Edit } from '@mui/icons-material';\r\nimport { Link, useNavigate, useParams } from 'react-router-dom'\r\n\r\nimport { API } from '../../service/api';\r\n\r\nimport { DataContext } from '../../context/DataProvider';\r\n\r\n// components\r\nimport Comments from './comments/Comments';\r\n\r\nconst Container = styled(Box)(({ theme }) => ({\r\n    margin: '50px 100px',\r\n    [theme.breakpoints.down('md')]: {\r\n        margin: 0\r\n    },\r\n}));\r\n\r\nconst Image = styled('img')({\r\n    width: '100%',\r\n    height: '50vh',\r\n    objectFit: 'cover'\r\n});\r\n\r\nconst EditIcon = styled(Edit)`\r\n    margin: 5px;\r\n    padding: 5px;\r\n    border: 1px solid #878787;\r\n    border-radius: 10px;\r\n`;\r\n\r\nconst DeleteIcon = styled(Delete)`\r\n    margin: 5px;\r\n    padding: 5px;\r\n    border: 1px solid #878787;\r\n    border-radius: 10px;\r\n`;\r\n\r\nconst Heading = styled(Typography)`\r\n    font-size: 38px;\r\n    font-weight: 600;\r\n    text-align: center;\r\n    margin: 50px 0 10px 0;\r\n`;\r\n\r\nconst Author = styled(Box)(({ theme }) => ({\r\n    color: '#878787',\r\n    display: 'flex',\r\n    margin: '20px 0',\r\n    [theme.breakpoints.down('sm')]: {\r\n        display: 'block'\r\n    },\r\n}));\r\n\r\nconst DetailView = () => {\r\n    const url = 'https://images.unsplash.com/photo-1543128639-4cb7e6eeef1b?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8bGFwdG9wJTIwc2V0dXB8ZW58MHx8MHx8&ixlib=rb-1.2.1&w=1000&q=80';\r\n    \r\n    const [post, setPost] = useState({});\r\n    const { account } = useContext(DataContext);\r\n\r\n    const navigate = useNavigate();\r\n    const { id } = useParams();\r\n    \r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            let response = await API.getPostById(id);\r\n            if (response.isSuccess) {\r\n                setPost(response.data);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    const deleteBlog = async () => {  \r\n        await API.deletePost(post._id);\r\n        navigate('/')\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Image src={post.picture || url} alt=\"post\" />\r\n            <Box style={{ float: 'right' }}>\r\n                {   \r\n                    account.username === post.username && \r\n                    <>  \r\n                        <Link to={`/update/${post._id}`}><EditIcon color=\"primary\" /></Link>\r\n                        <DeleteIcon onClick={() => deleteBlog()} color=\"error\" />\r\n                    </>\r\n                }\r\n            </Box>\r\n            <Heading>{post.title}</Heading>\r\n\r\n            <Author>\r\n                <Link to={`/?username=${post.username}`} style={{ textDecoration: 'none', color: 'inherit' }}>\r\n                    <Typography>Author: <span style={{fontWeight: 600}}>{post.username}</span></Typography>\r\n                </Link>\r\n                <Typography style={{marginLeft: 'auto'}}>{new Date(post.createdDate).toDateString()}</Typography>\r\n            </Author>\r\n\r\n            <Typography>{post.description}</Typography>\r\n            <Comments post={post} />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default DetailView;","C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\components\\create\\Update.jsx",["97","98","99"],"import React, { useState, useEffect } from 'react';\r\n\r\nimport { Box, styled, TextareaAutosize, Button, FormControl, InputBase } from '@mui/material';\r\nimport { AddCircle as Add } from '@mui/icons-material';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nimport { API } from '../../service/api';\r\n\r\nconst Container = styled(Box)(({ theme }) => ({\r\n    margin: '50px 100px',\r\n    [theme.breakpoints.down('md')]: {\r\n        margin: 0\r\n    }\r\n}));\r\n\r\nconst Image = styled('img')({\r\n    width: '100%',\r\n    height: '50vh',\r\n    objectFit: 'cover'\r\n});\r\n\r\nconst StyledFormControl = styled(FormControl)`\r\n    margin-top: 10px;\r\n    display: flex;\r\n    flex-direction: row;\r\n`;\r\n\r\nconst InputTextField = styled(InputBase)`\r\n    flex: 1;\r\n    margin: 0 30px;\r\n    font-size: 25px;\r\n`;\r\n\r\nconst StyledTextArea = styled(TextareaAutosize)`\r\n    width: 100%;\r\n    border: none;\r\n    margin-top: 50px;\r\n    font-size: 18px;\r\n    &:focus-visible {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst initialPost = {\r\n    title: '',\r\n    description: '',\r\n    picture: '',\r\n    username: 'codeforinterview',\r\n    categories: 'Tech',\r\n    createdDate: new Date()\r\n}\r\n\r\nconst Update = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const [post, setPost] = useState(initialPost);\r\n    const [file, setFile] = useState('');\r\n    const [imageURL, setImageURL] = useState('');\r\n\r\n    const { id } = useParams();\r\n\r\n    const url = 'https://images.unsplash.com/photo-1543128639-4cb7e6eeef1b?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8bGFwdG9wJTIwc2V0dXB8ZW58MHx8MHx8&ixlib=rb-1.2.1&w=1000&q=80';\r\n    \r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            let response = await API.getPostById(id);\r\n            if (response.isSuccess) {\r\n                setPost(response.data);\r\n            }\r\n        }\r\n        fetchData();\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        const getImage = async () => { \r\n            if(file) {\r\n                const data = new FormData();\r\n                data.append(\"name\", file.name);\r\n                data.append(\"file\", file);\r\n                \r\n                const response = await API.uploadFile(data);\r\n                if (response.isSuccess) {\r\n                    post.picture = response.data;\r\n                    setImageURL(response.data);    \r\n                }\r\n            }\r\n        }\r\n        getImage();\r\n    }, [file])\r\n\r\n    const updateBlogPost = async () => {\r\n        await API.updatePost(post);\r\n        navigate(`/details/${id}`);\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setPost({ ...post, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Image src={post.picture || url} alt=\"post\" />\r\n\r\n            <StyledFormControl>\r\n                <label htmlFor=\"fileInput\">\r\n                    <Add fontSize=\"large\" color=\"action\" />\r\n                </label>\r\n                <input\r\n                    type=\"file\"\r\n                    id=\"fileInput\"\r\n                    style={{ display: \"none\" }}\r\n                    onChange={(e) => setFile(e.target.files[0])}\r\n                />\r\n                <InputTextField onChange={(e) => handleChange(e)} value={post.title} name='title' placeholder=\"Title\" />\r\n                <Button onClick={() => updateBlogPost()} variant=\"contained\" color=\"primary\">Update</Button>\r\n            </StyledFormControl>\r\n\r\n            <StyledTextArea\r\n                rowsMin={5}\r\n                placeholder=\"Tell your story...\"\r\n                name='description'\r\n                onChange={(e) => handleChange(e)} \r\n                value={post.description}\r\n            />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Update;","C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\components\\header\\Header.jsx",["100","101"],"\r\nimport { AppBar, Toolbar, styled, Button } from '@mui/material'; \r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\n\r\nconst Component = styled(AppBar)`\r\n    background: #FFFFFF;\r\n    color: black;\r\n`;\r\n\r\nconst Container = styled(Toolbar)`\r\n    justify-content: center;\r\n    & > a {\r\n        padding: 20px;\r\n        color: #000;\r\n        text-decoration: none;\r\n    }\r\n`\r\n\r\nconst Header = () => {\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const logout = async () => navigate('/account');\r\n        \r\n    return (\r\n        <Component>\r\n            <Container>\r\n                <Link to='/'>HOME</Link>\r\n                <Link to='/about'>ABOUT</Link>\r\n                <Link to='/contact'>CONTACT</Link>\r\n                <Link to='/account'>LOGOUT</Link>\r\n            </Container>\r\n        </Component>\r\n    )\r\n}\r\n\r\nexport default Header;","C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\components\\account\\Login.jsx",[],"C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\components\\about\\About.jsx",[],"C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\components\\home\\Home.jsx",[],"C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\components\\contact\\Contact.jsx",["102"],"\r\nimport { Box, styled, Typography, Link } from '@mui/material';\r\nimport { GitHub, Instagram, Email } from '@mui/icons-material';\r\n\r\nconst Banner = styled(Box)`\r\n    background-image: url(http://mrtaba.ir/image/bg2.jpg);\r\n    width: 100%;\r\n    height: 50vh;\r\n    background-position: left 0px top -100px;\r\n    background-size: cover;\r\n`;\r\n\r\nconst Wrapper = styled(Box)`\r\n    padding: 20px;\r\n    & > h3, & > h5 {\r\n        margin-top: 50px;\r\n    }\r\n`;\r\n\r\nconst Text = styled(Typography)`\r\n    color: #878787;\r\n`;\r\n\r\n\r\nconst Contact = () => {\r\n    return (\r\n        <Box>\r\n            <Banner />\r\n            <Wrapper>\r\n                <Typography variant=\"h3\">Getting in touch is easy!</Typography>    \r\n                <Text variant=\"h5\">\r\n                    Reach out to me on\r\n                    <Link href=\"https://www.instagram.com/\" color=\"inherit\" target=\"_blank\">\r\n                        <Instagram/>\r\n                    </Link>\r\n                    or send me an Email \r\n                    <Link href=\"mailto:?Subject=This is a subject\" target=\"_blank\" color=\"inherit\">\r\n                        <Email />\r\n                    </Link>.\r\n                </Text>\r\n            </Wrapper>\r\n        </Box>\r\n    );\r\n}\r\n\r\nexport default Contact;","C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\components\\create\\CreatePost.jsx",["103"],"import React, { useState, useEffect, useContext } from 'react';\r\n\r\nimport { styled, Box, TextareaAutosize, Button, InputBase, FormControl  } from '@mui/material';\r\nimport { AddCircle as Add } from '@mui/icons-material';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\n\r\nimport { API } from '../../service/api';\r\nimport { DataContext } from '../../context/DataProvider';\r\n\r\nconst Container = styled(Box)(({ theme }) => ({\r\n    margin: '50px 100px',\r\n    [theme.breakpoints.down('md')]: {\r\n        margin: 0\r\n    }\r\n}));\r\n\r\nconst Image = styled('img')({\r\n    width: '100%',\r\n    height: '50vh',\r\n    objectFit: 'cover'\r\n});\r\n\r\nconst StyledFormControl = styled(FormControl)`\r\n    margin-top: 10px;\r\n    display: flex;\r\n    flex-direction: row;\r\n`;\r\n\r\nconst InputTextField = styled(InputBase)`\r\n    flex: 1;\r\n    margin: 0 30px;\r\n    font-size: 25px;\r\n`;\r\n\r\nconst Textarea = styled(TextareaAutosize)`\r\n    width: 100%;\r\n    border: none;\r\n    margin-top: 50px;\r\n    font-size: 18px;\r\n    &:focus-visible {\r\n        outline: none;\r\n    }\r\n`;\r\n\r\nconst initialPost = {\r\n    title: '',\r\n    description: '',\r\n    picture: '',\r\n    username: '',\r\n    categories: '',\r\n    createdDate: new Date()\r\n}\r\n\r\nconst CreatePost = () => {\r\n    const navigate = useNavigate();\r\n    const location = useLocation();\r\n\r\n    const [post, setPost] = useState(initialPost);\r\n    const [file, setFile] = useState('');\r\n    const { account } = useContext(DataContext);\r\n\r\n    const url = post.picture ? post.picture : 'https://images.unsplash.com/photo-1543128639-4cb7e6eeef1b?ixid=MnwxMjA3fDB8MHxzZWFyY2h8Mnx8bGFwdG9wJTIwc2V0dXB8ZW58MHx8MHx8&ixlib=rb-1.2.1&w=1000&q=80';\r\n    \r\n    useEffect(() => {\r\n        const getImage = async () => { \r\n            if(file) {\r\n                const data = new FormData();\r\n                data.append(\"name\", file.name);\r\n                data.append(\"file\", file);\r\n                \r\n                const response = await API.uploadFile(data);\r\n                post.picture = response.data;\r\n            }\r\n        }\r\n        getImage();\r\n        post.categories = location.search?.split('=')[1] || 'All';\r\n        post.username = account.username;\r\n    }, [file])\r\n\r\n    const savePost = async () => {\r\n        await API.createPost(post);\r\n        navigate('/');\r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setPost({ ...post, [e.target.name]: e.target.value });\r\n    }\r\n\r\n    return (\r\n        <Container>\r\n            <Image src={url} alt=\"post\" />\r\n\r\n            <StyledFormControl>\r\n                <label htmlFor=\"fileInput\">\r\n                    <Add fontSize=\"large\" color=\"action\" />\r\n                </label>\r\n                <input\r\n                    type=\"file\"\r\n                    id=\"fileInput\"\r\n                    style={{ display: \"none\" }}\r\n                    onChange={(e) => setFile(e.target.files[0])}\r\n                />\r\n                <InputTextField onChange={(e) => handleChange(e)} name='title' placeholder=\"Title\" />\r\n                <Button onClick={() => savePost()} variant=\"contained\" color=\"primary\">Publish</Button>\r\n            </StyledFormControl>\r\n\r\n            <Textarea\r\n                rowsMin={5}\r\n                placeholder=\"Tell your story...\"\r\n                name='description'\r\n                onChange={(e) => handleChange(e)} \r\n            />\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default CreatePost;","C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\service\\api.js",["104","105"],"import axios from 'axios';\r\n\r\nimport { API_NOTIFICATION_MESSAGES, SERVICE_URLS } from '../constants/config';\r\nimport { getAccessToken, getRefreshToken, setAccessToken, getType } from '../utils/common-utils';\r\n\r\nconst API_URL = 'http://localhost:8000';\r\n\r\nconst axiosInstance = axios.create({\r\n    baseURL: API_URL,\r\n    timeout: 10000, \r\n    headers: {\r\n        \"content-type\": \"application/json\"\r\n    }\r\n});\r\n\r\naxiosInstance.interceptors.request.use(\r\n    function(config) {\r\n        if (config.TYPE.params) {\r\n            config.params = config.TYPE.params\r\n        } else if (config.TYPE.query) {\r\n            config.url = config.url + '/' + config.TYPE.query;\r\n        }\r\n        return config;\r\n    },\r\n    function(error) {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\n\r\naxiosInstance.interceptors.response.use(\r\n    function(response) {\r\n        // Stop global loader here\r\n        return processResponse(response);\r\n    },\r\n    function(error) {\r\n        // Stop global loader here\r\n        return Promise.reject(ProcessError(error));\r\n    }\r\n)\r\n\r\n///////////////////////////////\r\n// If success -> returns { isSuccess: true, data: object }\r\n// If fail -> returns { isFailure: true, status: string, msg: string, code: int }\r\n//////////////////////////////\r\nconst processResponse = (response) => {\r\n    if (response?.status === 200) {\r\n        return { isSuccess: true, data: response.data }\r\n    } else {\r\n        return {\r\n            isFailure: true,\r\n            status: response?.status,\r\n            msg: response?.msg,\r\n            code: response?.code\r\n        }\r\n    }\r\n}\r\n\r\n///////////////////////////////\r\n// If success -> returns { isSuccess: true, data: object }\r\n// If fail -> returns { isError: true, status: string, msg: string, code: int }\r\n//////////////////////////////\r\nconst ProcessError = async (error) => {\r\n    if (error.response) {\r\n        // Request made and server responded with a status code \r\n        // that falls out of the range of 2xx\r\n        if (error.response?.status === 403) {\r\n            // const { url, config } = error.response;\r\n            // console.log(error);\r\n            // try {\r\n            //     let response = await API.getRefreshToken({ token: getRefreshToken() });\r\n            //     if (response.isSuccess) {\r\n                    sessionStorage.clear();\r\n            //         setAccessToken(response.data.accessToken);\r\n\r\n            //         const requestData = error.toJSON();\r\n\r\n            //         let response1 = await axios({\r\n            //             method: requestData.config.method,\r\n            //             url: requestData.config.baseURL + requestData.config.url,\r\n            //             headers: { \"content-type\": \"application/json\", \"authorization\": getAccessToken() },\r\n            //             params: requestData.config.params\r\n            //         });\r\n            //     }\r\n            // } catch (error) {\r\n            //     return Promise.reject(error)\r\n            // }\r\n        } else {\r\n            console.log(\"ERROR IN RESPONSE: \", error.toJSON());\r\n            return {\r\n                isError: true,\r\n                msg: API_NOTIFICATION_MESSAGES.responseFailure,\r\n                code: error.response.status\r\n            }\r\n        }\r\n    } else if (error.request) { \r\n        // The request was made but no response was received\r\n        console.log(\"ERROR IN RESPONSE: \", error.toJSON());\r\n        return {\r\n            isError: true,\r\n            msg: API_NOTIFICATION_MESSAGES.requestFailure,\r\n            code: \"\"\r\n        }\r\n    } else { \r\n        // Something happened in setting up the request that triggered an Error\r\n        console.log(\"ERROR IN RESPONSE: \", error.toJSON());\r\n        return {\r\n            isError: true,\r\n            msg: API_NOTIFICATION_MESSAGES.networkError,\r\n            code: \"\"\r\n        }\r\n    }\r\n}\r\n\r\nconst API = {};\r\n\r\nfor (const [key, value] of Object.entries(SERVICE_URLS)) {\r\n    API[key] = (body, showUploadProgress, showDownloadProgress) =>\r\n        axiosInstance({\r\n            method: value.method,\r\n            url: value.url,\r\n            data: value.method === 'DELETE' ? '' : body,\r\n            responseType: value.responseType,\r\n            headers: {\r\n                authorization: getAccessToken(),\r\n            },\r\n            TYPE: getType(value, body),\r\n            onUploadProgress: function(progressEvent) {\r\n                if (showUploadProgress) {\r\n                    let percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n                    showUploadProgress(percentCompleted);\r\n                }\r\n            },\r\n            onDownloadProgress: function(progressEvent) {\r\n                if (showDownloadProgress) {\r\n                    let percentCompleted = Math.round((progressEvent.loaded * 100) / progressEvent.total);\r\n                    showDownloadProgress(percentCompleted);\r\n                }\r\n            }\r\n        });\r\n}\r\n\r\nexport { API };","C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\components\\home\\Categories.jsx",[],"C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\components\\banner\\Banner.jsx",[],"C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\components\\details\\comments\\Comments.jsx",[],"C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\components\\home\\post\\Posts.jsx",[],"C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\utils\\common-utils.js",[],"C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\constants\\data.js",[],"C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\constants\\config.js",[],"C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\components\\home\\post\\Post.jsx",[],"C:\\Users\\91844\\OneDrive\\Desktop\\Blog-Website\\client\\src\\components\\details\\comments\\Comment.jsx",[],{"ruleId":"106","severity":1,"message":"107","line":74,"column":8,"nodeType":"108","endLine":74,"endColumn":10,"suggestions":"109"},{"ruleId":"110","severity":1,"message":"111","line":58,"column":12,"nodeType":"112","messageId":"113","endLine":58,"endColumn":20},{"ruleId":"106","severity":1,"message":"107","line":72,"column":8,"nodeType":"108","endLine":72,"endColumn":10,"suggestions":"114"},{"ruleId":"106","severity":1,"message":"115","line":89,"column":8,"nodeType":"108","endLine":89,"endColumn":14,"suggestions":"116"},{"ruleId":"110","severity":1,"message":"117","line":2,"column":35,"nodeType":"112","messageId":"113","endLine":2,"endColumn":41},{"ruleId":"110","severity":1,"message":"118","line":26,"column":11,"nodeType":"112","messageId":"113","endLine":26,"endColumn":17},{"ruleId":"110","severity":1,"message":"119","line":3,"column":10,"nodeType":"112","messageId":"113","endLine":3,"endColumn":16},{"ruleId":"106","severity":1,"message":"120","line":78,"column":8,"nodeType":"108","endLine":78,"endColumn":14,"suggestions":"121"},{"ruleId":"110","severity":1,"message":"122","line":4,"column":26,"nodeType":"112","messageId":"113","endLine":4,"endColumn":41},{"ruleId":"110","severity":1,"message":"123","line":4,"column":43,"nodeType":"112","messageId":"113","endLine":4,"endColumn":57},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["124"],"no-unused-vars","'imageURL' is assigned a value but never used.","Identifier","unusedVar",["125"],"React Hook useEffect has a missing dependency: 'post'. Either include it or remove the dependency array.",["126"],"'Button' is defined but never used.","'logout' is assigned a value but never used.","'GitHub' is defined but never used.","React Hook useEffect has missing dependencies: 'account.username', 'location.search', and 'post'. Either include them or remove the dependency array.",["127"],"'getRefreshToken' is defined but never used.","'setAccessToken' is defined but never used.",{"desc":"128","fix":"129"},{"desc":"128","fix":"130"},{"desc":"131","fix":"132"},{"desc":"133","fix":"134"},"Update the dependencies array to be: [id]",{"range":"135","text":"136"},{"range":"137","text":"136"},"Update the dependencies array to be: [file, post]",{"range":"138","text":"139"},"Update the dependencies array to be: [account.username, file, location.search, post]",{"range":"140","text":"141"},[1894,1896],"[id]",[1837,1839],[2372,2378],"[file, post]",[2185,2191],"[account.username, file, location.search, post]"]